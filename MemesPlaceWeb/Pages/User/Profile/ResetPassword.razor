@page "/users/profile/settings"
@inject IClient httpclient
@inject NavigationManager _nav
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.WebUtilities

<h3>Register</h3>

@if(!string.IsNullOrEmpty(message)){

<div class="alert-danger">@message</div>
}
<EditForm Model="@regModel" OnValidSubmit="@RegisterPost" >
<DataAnnotationsValidator/>
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudTextField  Label="Current Password" 
                              @bind-Value="regModel.CurrentPassword" For="@(() => regModel.CurrentPassword)"InputType="InputType.Password"/>
                    <MudTextField  Label="Password" Class="mt-3"
                                  @bind-Value="regModel.NewPassword" For="@(() => regModel.NewPassword)" InputType="InputType.Password"/>
                <MudTextField  Label="Verify Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="regModel.VerifyPassword" For="@(() => regModel.VerifyPassword)" InputType="InputType.Password" />
                
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Change Password</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>
</EditForm>

@code {
    bool success = false;
    PasswordChange regModel = new PasswordChange();
    string message = string.Empty;


    public async Task RegisterPost(){



        try
        {
            if(regModel.NewPassword==regModel.VerifyPassword)
            {
                await httpclient.ChangepasswordAsync(regModel);
                success = true;
                _nav.NavigateTo("/users/login");
            }
            else
            {
                message = "Passwords not equal";
            }
        }
        catch (ApiException ex)
        {
            message = ex.Message;

        }
    }
}
